server:
  port: 8084

spring:
  application:
    name: enrollment-service
  r2dbc:
    url: r2dbc:postgresql://<project-ref>.supabase.co:5432/<db-name> 
    username: postgres
    password: <YOUR_SUPABASE_DB_PASSWORD>
  jpa:
    hibernate:
      ddl-auto: update
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: enrollment-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        # TODO: Confiar en los paquetes de DTOs de eventos
        spring.json.trusted.packages: "com.skilling.lms.shared.models.*, com.skilling.lms.enrollment.event.*"

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
    instance:
      hostname: localhost

resilience4j:
  circuitbreaker:
    instances:
      # TODO: Configurar para que instancie las llamadas al users-service
      usersService:
        failureRateThreshold: 50
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 10
      # TODO: Configurar para que instancie las llamadas al curriculum-service
      curriculumService:
        failureRateThreshold: 50
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 10