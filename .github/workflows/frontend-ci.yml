name: Frontend CI/CD

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'frontend/**' 
      - '.github/workflows/frontend-ci.yml'
  pull_request:
    branches:
      - main
      - develop
    paths:
      - 'frontend/**'
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20' 

    - name: Cache pnpm modules
      uses: actions/cache@v4
      with:
        path: ~/.pnpm-store
        key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-

    - name: Install pnpm
      run: npm install -g pnpm

    - name: Install Frontend Dependencies
      run: |
        cd frontend/
        pnpm install --frozen-lockfile # Instala dependencias del frontend

    - name: Build Frontend Application
      run: |
        cd frontend/
        pnpm run build --configuration=production # Construye la app Angular en modo producci√≥n
      env:
        NG_APP_API_URL: ${{ secrets.FRONTEND_API_GATEWAY_URL }}

    - name: Install Vercel CLI
      run: npm install --global vercel@latest

    - name: Pull Vercel Environment Variables
      run: |
        vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      working-directory: frontend/

    - name: Deploy to Vercel
      run: |
        vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }}
      working-directory: frontend/
      env:
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}